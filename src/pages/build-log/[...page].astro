---
import Base from "../../layouts/Base.astro";
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const all = await getCollection('builds', ({ data }) => !data.draft);
  all.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  const pageSize = 10;
  const totalPages = Math.max(1, Math.ceil(all.length / pageSize));
  return Array.from({ length: totalPages }).map((_, i) => ({
    params: { page: i === 0 ? [] : [String(i + 1)] },
    props: { page: i + 1, totalPages, posts: all.slice(i * pageSize, (i + 1) * pageSize) }
  }));
}

const { page, totalPages, posts } = Astro.props;
---
<Base title={`Build Log â€” Page ${page}`} description="Project logs and updates">
  <h1>Build Log</h1>
  <p class="meta">Page {page} of {totalPages}</p>
  <div class="grid">
    {posts.map(p => (
      <div class="post">
        <h3><a href={`/build-log/${p.slug}/`}>{p.data.title}</a></h3>
        <div class="meta">{new Date(p.data.date).toLocaleDateString()}</div>
        {p.data.summary && <p>{p.data.summary}</p>}
      </div>
    ))}
  </div>
  <div class="pagination">
    {Array.from({ length: totalPages }).map((_, i) => {
      const n = i + 1;
      const href = n === 1 ? '/build-log/' : `/build-log/${n}/`;
      const cls = n === page ? 'page-link active' : 'page-link';
      return <a class={cls} href={href}>{n}</a>;
    })}
  </div>
</Base>
